<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd ">

    <context:component-scan base-package="uk.ee.framework"/>
    <aop:aspectj-autoproxy/>
    <aop:aspectj-autoproxy proxy-target-class="true" />

    <bean id="simpleThreadScope" class="org.springframework.context.support.SimpleThreadScope"/>

    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="thread-local" value-ref="simpleThreadScope"></entry>
            </map>
        </property>
    </bean>

    <!-- Default profile name is 'default' -->
    <!-- Use '-Dspring.profiles.active=<profile name>' to specify profile-->
    <beans profile="default,local">
        <bean id="localProperties" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:profile/local.properties</value>
                    <value>classpath:settings/general.properties</value>
                    <value>classpath:settings/pagemapping.properties</value>
                </list>
            </property>
        </bean>

        <!-- Defining desired capabilities as prototype to avoid collisions in multi threading, e.g. access to object while it's destroying, etc. -->
        <bean name="localDesiredCapabilities" class="org.openqa.selenium.remote.DesiredCapabilities" scope="prototype">
            <constructor-arg>
                <map>
                    <entry key="url" value="${webdriver.hub.url}"/>
                    <entry key="browserName" value="${webdriver.browser.name}"/>
                    <entry key="browserVersion" value="${webdriver.browser.version}"/>
                    <entry key="platform" value="${webdriver.platform.name}"/>

                </map>
            </constructor-arg>
        </bean>

        <bean name="localExtendedWebDriver"
              class="uk.ee.framework.driver.WebDriverFactoryBean"
              scope="thread-local">
            <property name="desiredCapabilities" ref="localDesiredCapabilities"/>
        </bean>
    </beans>

    <beans profile="perfecto">
        <bean id="saucelabsProperties" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:profile/perfecto.properties</value>
                    <value>classpath:settings/general.properties</value>
                    <value>classpath:settings/pagemapping.properties</value>
                </list>
            </property>
        </bean>

        <bean name="perfectosDesiredCapabilities" class="org.openqa.selenium.remote.DesiredCapabilities"
              scope="prototype">
            <constructor-arg>
                <map>
                    <entry key="browserName" value="${webdriver.browser.name}"/>
                    <entry key="browserVersion" value="${webdriver.browser.version}"/>
                    <entry key="platformName" value="${webdriver.platform.name}"/>
                    <entry key="platformVersion" value="${webdriver.platform.version}"/>
                    <entry key="url" value="${perfecto.url}"/>
                    <entry key="user" value="${perfecto.username}"/>
                    <entry key="password" value="${perfecto.password}"/>
                </map>
            </constructor-arg>
        </bean>

        <bean name="perfectosExtendedWebDriver"
              class="uk.ee.framework.driver.WebDriverFactoryBean"
              scope="thread-local">
            <property name="desiredCapabilities" ref="perfectosDesiredCapabilities"/>
        </bean>

    </beans>

    <beans profile="mobileLocal">
        <bean id="mobileProperties" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:profile/mobile.properties</value>
                    <value>classpath:settings/general.properties</value>
                    <value>classpath:settings/pagemapping.properties</value>
                </list>
            </property>
        </bean>

        <bean name="mobileDesiredCapabilities" class="org.openqa.selenium.remote.DesiredCapabilities"
              scope="prototype">
            <constructor-arg>
                <map>
                    <entry key="url" value="${webdriver.hub.url}"/>
                    <entry key="browserName" value="${webdriver.browser.name}"/>
                    <entry key="platformVersion" value="${webdriver.platform.version}"/>
                    <entry key="platformName" value="${webdriver.platform.name}"/>
                    <entry key="deviceName" value="${webdriver.device.name}"/>
                    <!--<entry key="automationName" value="${webdriver.automation.name}"/>-->
                </map>
            </constructor-arg>
        </bean>

        <bean name="mobileExtendedWebDriver"
              class="uk.ee.framework.driver.WebDriverFactoryBean"
              scope="thread-local">
            <property name="desiredCapabilities" ref="mobileDesiredCapabilities"/>
        </bean>
    </beans>

    <beans profile="perfectoMobile">
        <bean id="perfectoMobileProps" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:profile/perfecto.properties</value>
                    <value>classpath:settings/general.properties</value>
                    <value>classpath:settings/pagemapping.properties</value>
                </list>
            </property>
        </bean>

        <!-- Experimental to see how mobilw works n sererla threads. Could be removed whe it clear that one config is enough fot both mob and web-->
        <bean name="perfectoMobileDesiredCapabilities" class="org.openqa.selenium.remote.DesiredCapabilities"
              scope="prototype">
            <constructor-arg>
                <map>
                    <entry key="url" value="${perfecto.url}"/>
                    <entry key="user" value="${perfecto.username}"/>
                    <entry key="password" value="${perfecto.password}"/>
                    <entry key="platformName" value="${webdriver.platform.name}"/>
                    <entry key="model" value="${webdriver.model}"/>

                    <!--<entry key="platformVersion" value="${webdriver.platform.version}"/>-->
                    <!--<entry key="browserName" value="${webdriver.browser.name}"/>-->
                    <!--<entry key="deviceName" value=""/>-->
                    <!--<entry key="browserVersion" value="${webdriver.browser.version}"/>-->
                    <!--<entry key="location" value="${perfecto.location}"/>-->
                    <!--<entry key="resolution" value="${webdriver.browser.resolution}"/>-->
                    <!--<entry key="manufacturer" value="${webdriver.manufacturer}"/>-->
                </map>
            </constructor-arg>
        </bean>

        <bean name="perfectoMobile"
              class="uk.ee.framework.driver.WebDriverFactoryBean"
              scope="thread-local">
            <property name="desiredCapabilities" ref="perfectoMobileDesiredCapabilities"/>
        </bean>

    </beans>

    <beans>
        <bean class="uk.ee.framework.post_processor.LoggableBeanPostProcessor"/>
        <bean class="uk.ee.framework.post_processor.DevicePostProcessor"/>

        <bean id="uniqueLaunchId" class="java.lang.String">
            <constructor-arg value="#{ T(java.lang.String).valueOf(T(java.lang.Math).random()).substring(2,15)}"/>
        </bean>
    </beans>

</beans>
